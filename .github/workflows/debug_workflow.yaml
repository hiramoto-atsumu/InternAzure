name: InternCI_debug

on:
  workflow_dispatch:
env:
  iothubname: "yardvisibilityiothubhiramoto3"
  eventhubsnamespace: "yardvisibilityeventhubhiramoto3"
  resourceGroup: "InternDev"
  location: "eastus"
  endpointsubscriptionid: ${{ secrets.ENDPOINTSUBSCRIPTIONID }}
jobs:
  MakeIoTHubsAndDPS:
    runs-on: ubuntu-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: get connectionstring
        run: |
          echo "connect<<EOF" >> $GITHUB_ENV
          echo "asdgsga" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
      - name: get connectionstring
        run: |
          echo $connect
      - name: Login azure
        run: az login # login azure manually
      - name: Add custom endpoint
        run: |
          echo "eventhubname=msg-licenseplate" >> $GITHUB_ENV
          echo "endpointname=EndpointMsgLicensePlate" >> $GITHUB_ENV
      - name: get connectionstring
        run: |
          echo 'connectionstring=$(az eventhubs eventhub authorization-rule keys list --resource-group $resourceGroup --namespace-name $eventhubsnamespace --name TestFunctionPolicy --eventhub-name $eventhubname -o yaml --query "primaryConnectionString")' >> $GITHUB_ENV
      - name: get connectionstring
        run: |
          echo "connectionstring<<EOF" >> $GITHUB_ENV
          echo $(az eventhubs eventhub authorization-rule keys list --resource-group $resourceGroup --namespace-name $eventhubsnamespace --name TestFunctionPolicy --eventhub-name $eventhubname --query "primaryConnectionString") >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
      - name: get connectionstring
        run: |
          echo $connectionstringã€€-replace "`r?`n", ""
          echo ${{ env.connectionstring }} -replace '\r?\n'
          echo $connectionstring
          echo ($connectionstring).GetType()
          echo $([string]$connectionstring -replace '\r?\n' | ConvertFrom-Json)
          echo $([string]$connectionstring -replace '\r?\n' | ConvertFrom-Json).GetType()
          echo "connectionstring=$([string]$connectionstring -replace '\r?\n' | ConvertFrom-Json)" >> $GITHUB_ENV
      - name: get primaryconnectionstring
        run: |
          echo "primaryconnectionstring=$([string]$connectionstring -replace '\r?\n' | ConvertFrom-Json).primaryConnectionString" >> $GITHUB_ENV

      - name: get connectionstring
        run: |
          echo "connectionstring=$([string]$connectionstring -replace '\r?\n' | ConvertFrom-Json).primaryConnectionString" >> $GITHUB_ENV
      - name: add routing endpoint
        run: az iot hub routing-endpoint create --endpoint-name $endpointname --endpoint-resource-group $resourceGroup --endpoint-subscription-id $endpointsubscriptionid --endpoint-type eventhub --hub-name $iothubname --auth-type keyBased --connection-string $connectionstring
